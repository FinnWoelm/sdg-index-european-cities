{"version":3,"sources":["components/SDGBar.js","components/CityIndex.js","components/SDGTile.js","helpers/getSDGLabel.js","pages/HomePage.js","pages/CountryPage.js","App.js","serviceWorker.js","index.js"],"names":["Bar","styled","div","_templateObject","Block","_templateObject2","SDGBar","_this$props","this","props","scores","showTooltip","hideTooltip","blocks","Object","keys","map","sdg","blockWidth","Number","react_default","a","createElement","key","className","concat","toLowerCase","data-sdg","data-score","style","width","onMouseOver","onMouseOut","PureComponent","SDGIndexTable","MUIDataTable","CityIndex_templateObject","SDGIndexTableHead","th","CityIndex_templateObject2","customHead","_ref","sortColumn","index","sort","sortDirection","label","sortIndicator","ArrowUpward_default","ArrowDownward_default","SvgIcon","ButtonBase","disabled","onClick","Typography","variant","fontWeight","options","download","viewColumns","print","filter","responsive","selectableRows","elevation","rowsPerPage","search","customFooter","count","page","changeRowsPerPage","changePage","CityIndex","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","cityDataLoaded","cities","data","city","pluckFromJson","setState","state","_this2","fetch","then","response","status","Error","json","output","forEach","columns","name","customHeadRender","customBodyRender","value","tableMeta","updateValue","color","components_SDGBar","gutterBottom","FullSizeImage","img","SDGTile_templateObject","SDGTile","otherProps","objectWithoutProperties","GridListTile","assign","cols","src","alt","LABELS","getSDGLabel","sdgNumber","substring","Tooltip","Popper","HomePage_templateObject","HomePage","event","currentTarget","tooltipShow","tooltipAnchor","tooltipScore","getAttribute","tooltipLabel","_this$state","goals1to13","toConsumableArray","Array","goal","components_SDGTile","goals15to16","sdgTile","tiles","Paper","padding","Box","marginBottom","GridList","spacing","cellHeight","components_CityIndex","open","Boolean","keepMounted","anchorEl","placement","modifiers","offset","enabled","paragraph","CountryPage","Component","SiteHeader","AppBar","App_templateObject","GlobalStyle","createGlobalStyle","App_templateObject2","ToolbarButton","_templateObject3","App","react_router_dom","basename","position","Container","Toolbar","component","Link","to","flexGrow","href","target","rel","maxHeight","react_router","exact","path","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d11357f.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\n\nconst Bar = styled.div`\n  width: 400px;\n  background: #eee;\n`\n\nconst Block = styled.div`\n  display: inline-block;\n  background: black;\n  border-right: 1px solid #fff;\n  min-height: 24px;\n  vertical-align: bottom;\n`\n\nclass SDGBar extends PureComponent {\n  render() {\n    const { scores, showTooltip, hideTooltip } = this.props\n\n    const NUMBER_OF_GOALS = 15\n\n    const blocks = Object.keys(scores).map((sdg) => {\n      // width of block: max-width * score-in-percent\n      // max width of block: 100/num-goals\n      const blockWidth = 100/NUMBER_OF_GOALS * (Number(scores[sdg])/100.0)\n      return (\n        <Block\n          key={sdg}\n          className={`sdg bg ${sdg.toLowerCase()}`}\n          data-sdg={sdg}\n          data-score={`${scores[sdg]}%`}\n          style={{width: `calc(${blockWidth}% - 1px`}}\n          onMouseOver={showTooltip}\n          onMouseOut={hideTooltip} />\n      )\n    })\n\n    return(\n      <Bar>\n        {blocks}\n      </Bar>\n    );\n  }\n}\n\nexport default SDGBar\n","import React, { PureComponent } from 'react'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Typography from '@material-ui/core/Typography'\nimport MUIDataTable from \"mui-datatables\"\nimport styled from 'styled-components'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport SvgIcon from '@material-ui/core/SvgIcon'\n\nimport SDGBar from './SDGBar'\n\nconst SDGIndexTable = styled(MUIDataTable)`\n  && {\n    overflow-x: auto;\n  }\n\n  .MuiTableCell-head {\n    color: black;\n    font-size: 1rem;\n    border-top: 1px solid rgba(0,0,0,0.12);\n\n    &:after{\n      content:'';\n      position:absolute;\n      left: 0;\n      bottom: 0;\n      width:100%;\n      border-bottom: 2px solid rgba(0,0,0,0.12);\n    }\n  }\n\n  .MuiTableCell-body {\n    color: #6c757d;\n    font-size: 1rem;\n  }\n`\n\nconst SDGIndexTableHead = styled.th`\n  && {\n    border-top: 1px solid rgba(0,0,0,0.12);\n    top: 0px;\n    left: 0px;\n    z-index: 100;\n    position: sticky;\n    background-color: #fff;\n    padding: 0;\n\n    &:after{\n      content:'';\n      position:absolute;\n      left: 0;\n      bottom: 0;\n      width:100%;\n      border-bottom: 2px solid rgba(0,0,0,0.12);\n    }\n  }\n\n  button {\n    width: 100%;\n    padding: 20px 16px 20px 16px;\n    justify-content: left;\n    font-weight: bold;\n    line-height: 24px;\n\n    &:hover {\n      background: #eee;\n    }\n  }\n`\n\nconst customHead = ({index, sort, sortDirection, label}, sortColumn) => {\n  const sortIndicator = (() => {\n    switch(sortDirection) {\n      case 'asc': return <ArrowUpwardIcon />\n      case 'desc': return <ArrowDownwardIcon />\n      default: return <SvgIcon />\n    }\n  })();\n\n  return (\n    <SDGIndexTableHead key={index}>\n      <ButtonBase disabled={!sort} onClick={() => sortColumn(index)}>\n        <Typography variant='body1' style={{fontWeight: 500}}>\n          {label}\n        </Typography>\n        {sortIndicator}\n      </ButtonBase>\n    </SDGIndexTableHead>\n  );\n}\n\nconst options = {\n  download: false,\n  viewColumns: false,\n  print: false,\n  filter: false,\n  responsive: 'none',\n  selectableRows: 'none',\n  elevation: 0,\n  rowsPerPage: 500,\n  search: false,\n  sort: true,\n  customFooter: (count, page, rowsPerPage, changeRowsPerPage, changePage) => {\n    return <tbody></tbody>\n  }\n};\n\nclass CityIndex extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n  }\n\n  componentDidMount() {\n    fetch('/data/cities.json')\n      .then(response => {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(data => this.cityDataLoaded(data));\n  }\n\n  cityDataLoaded = cities => {\n    const data =\n      cities.map(city => {\n        return [city['city'], city['region'],\n               this.pluckFromJson(city, ['SDG1', 'SDG2', 'SDG3', 'SDG4', 'SDG5', 'SDG6', 'SDG7', 'SDG8', 'SDG9', 'SDG10', 'SDG11', 'SDG12', 'SDG13', 'SDG15', 'SDG16']),\n               Number(city['rank']), Number(city['score'])]\n      })\n\n    this.setState({ data: data })\n  }\n\n  pluckFromJson(json, keys) {\n    var output = {}\n    keys.forEach(key => {\n      output[key] = json[key]\n    })\n    return output\n  }\n\n  render() {\n    const { data } = this.state\n\n    const { showTooltip, hideTooltip } = this.props;\n\n    const columns = [\n      {\n        name: \"City\",\n        options: {\n          sort: true,\n          sortDirection: null,\n          customHeadRender: customHead,\n          customBodyRender: (value, tableMeta, updateValue) => {\n            return <span style={{fontWeight: '500', color: 'black'}}>{value}</span>\n          },\n        },\n      },\n      {\n        name: \"Region\",\n        options: {\n          sort: true,\n          sortDirection: null,\n          customHeadRender: customHead\n        },\n      },\n      {\n        name: \"SDGs\",\n        options: {\n          sort: false,\n          customBodyRender: (value, tableMeta, updateValue) => {\n            return <SDGBar scores={value}\n                           showTooltip={showTooltip}\n                           hideTooltip={hideTooltip}/>;\n          },\n          customHeadRender: customHead\n        },\n      },\n      {\n        name: \"Rank\",\n        options: {\n          sort: true,\n          sortDirection: 'asc',\n          customHeadRender: customHead\n        },\n      },\n      {\n        name: \"Score\",\n        options: {\n          sort: false,\n          customHeadRender: customHead\n        },\n      },\n    ]\n\n    return (\n      <div>\n        <Typography variant=\"h5\" gutterBottom>\n          The European Cities SDG Index\n        </Typography>\n        <Typography variant='body1' style={{color: '#6c757d'}} gutterBottom>\n          Select a city to see its full profile.\n        </Typography>\n\n        <SDGIndexTable\n          data={data}\n          columns={columns}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CityIndex\n","import React, { PureComponent } from 'react'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport styled from 'styled-components'\n\nconst FullSizeImage = styled.img`\n  && {\n    left: 0;\n    position: default;\n    transform: none;\n    width: 100%;\n  }\n`\n\nclass SDGTile extends PureComponent {\n  render() {\n    const { sdg, ...otherProps } = this.props\n\n    return(\n      <GridListTile cols={1} {...otherProps}>\n        <FullSizeImage src={`/images/sdg${sdg}.png`} alt={`SDG ${sdg} icon`} className={`bg sdg${sdg}`} />\n      </GridListTile>\n    );\n  }\n}\n\nexport default SDGTile\n","const LABELS = [\n  \"No poverty\",\n  \"Zero hunger\",\n  \"Good health and well-being\",\n  \"Quality education\",\n  \"Gender equality\",\n  \"Clean water and sanitation\",\n  \"Affordable and clean energy\",\n  \"Decent work and economic growth\",\n  \"Industry, innovation and infrastructure\",\n  \"Reduced inequalities\",\n  \"Sustainable cities and communities\",\n  \"Responsible consumption and production\",\n  \"Climate action\",\n  \"Life below water\",\n  \"Life on land\",\n  \"Peace, justice and strong institutions\",\n  \"Partnerships for the goals\"\n]\n\n// Converts SDG into its label\n// Expects input: \"SDG12\" or \"SDG6\"\nconst getSDGLabel = sdg => {\n  const sdgNumber = Number(sdg.substring(3))\n\n  return LABELS[sdgNumber];\n}\n\nexport default getSDGLabel\n","import React, { PureComponent } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport CityIndex from '../components/CityIndex'\nimport Popper from '@material-ui/core/Popper'\nimport GridList from '@material-ui/core/GridList';\nimport styled from 'styled-components'\nimport Box from '@material-ui/core/Box';\n\n\nimport SDGTile from '../components/SDGTile'\nimport getSDGLabel from '../helpers/getSDGLabel'\n\nconst Tooltip = styled(Popper)`\n  font-size: .8rem;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n  position: absolute;\n  pointer-events: none;\n  z-index: 1000;\n  transition: all .2s;\n\n  &:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    content: \"▼\";\n    color: rgba(0, 0, 0, 0.8);\n    position: absolute;\n    text-align: center;\n    left: 0;\n    bottom: -7px;\n  }\n\n  &.hidden {\n    visibility: hidden;\n  }\n`\n\nclass HomePage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipShow: false,\n      tooltipAnchor: null,\n      tooltipScore: null,\n      tooltipLabel: null\n    };\n  }\n\n  showTooltip = event => {\n    const { currentTarget } = event;\n\n    this.setState(state => ({\n      tooltipShow: true,\n      tooltipAnchor: currentTarget,\n      tooltipScore: currentTarget.getAttribute('data-score'),\n      tooltipLabel: getSDGLabel(currentTarget.getAttribute('data-sdg'))\n    }));\n  };\n\n  hideTooltip = event => {\n    this.setState(state => ({\n      tooltipShow: false\n    }));\n  };\n\n  render() {\n    const { tooltipShow, tooltipAnchor, tooltipLabel, tooltipScore } = this.state\n\n    const goals1to13  = [...Array(13).keys()].map(goal => <SDGTile key={goal+1} sdg={goal+1} />)\n    const goals15to16 = [...Array(2).keys()].map(goal => <SDGTile key={goal+15} sdg={goal+15} />)\n    const sdgTile     = <SDGTile key={18} sdg='18' />\n\n    const tiles = goals1to13.concat(goals15to16, sdgTile)\n\n    return (\n      <Paper style={{padding: 24}}>\n        <Box marginBottom={5}>\n          <Typography variant=\"h5\" gutterBottom>\n            Sustainable Development Goals\n          </Typography>\n          <Typography variant='body1' style={{color: '#6c757d'}} gutterBottom>\n            Select one of the 15 SDGs to see it on the map.\n          </Typography>\n          <GridList cols={8} spacing={8} cellHeight='auto'>\n            {tiles}\n          </GridList>\n        </Box>\n\n        <CityIndex showTooltip={this.showTooltip} hideTooltip={this.hideTooltip} />\n        <Tooltip\n          className={tooltipShow ? 'show' : 'hidden'}\n          open={Boolean(tooltipAnchor)}\n          keepMounted={true}\n          anchorEl={tooltipAnchor}\n          placement=\"top\"\n          modifiers={{\n            offset: {\n              enabled: true,\n              offset: '0, 7px'\n            }\n          }}>\n          <Typography variant='body2' paragraph={false}>\n            <span style={{fontWeight: 500}}>\n              {tooltipLabel}\n            </span>: {tooltipScore}\n          </Typography>\n        </Tooltip>\n      </Paper>\n    );\n  }\n}\n\nexport default HomePage\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nclass CountryPage extends Component {\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>Country</Typography>\n      </div>\n    );\n  }\n}\n\nexport default CountryPage\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Container from '@material-ui/core/Container'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport HomePage from './pages/HomePage'\nimport CountryPage from './pages/CountryPage'\n\nconst SiteHeader = styled(AppBar)`\n  && {\n    box-shadow: 0 1px 12px -3px rgba(0,0,0,.1);\n    background: white;\n  }\n\n  h6 {\n    font-weight: 400;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #f8f9fa;\n    margin: 0;\n    padding: 0;\n  }\n\n  .bg {\n    &.sdg1 {\n      background: rgb(204,44,67);\n    }\n    &.sdg2 {\n      background: rgb(211, 162 ,70 );\n    }\n    &.sdg3 {\n      background: rgb(81, 148 ,71 );\n    }\n    &.sdg4 {\n      background: rgb(175, 39, 56 );\n    }\n    &.sdg5 {\n      background: rgb(211 ,69 ,58 );\n    }\n    &.sdg6 {\n      background: rgb(73, 181 ,203 ) ;\n    }\n    &.sdg7 {\n      background: rgb(238, 189, 64 ) ;\n    }\n    &.sdg8 {\n      background: rgb(141, 36, 65 );\n    }\n    &.sdg9 {\n      background: rgb(219, 104, 62 ) ;\n    }\n    &.sdg10 {\n      background: rgb(197 ,36 ,96 );\n    }\n    &.sdg11 {\n      background: rgb(232, 151, 68 ) ;\n    }\n    &.sdg12 {\n      background: rgb(177 ,134, 58 ) ;\n    }\n    &.sdg13 {\n      background: rgb(65, 119 ,68 );\n    }\n    &.sdg15 {\n      background: rgb(100 ,167, 74 ) ;\n    }\n    &.sdg16 {\n      background: rgb(31, 101 ,137 ) ;\n    }\n  }\n`\n\nconst ToolbarButton = styled(ButtonBase)`\n  && {\n    text-align: left;\n    padding: 16px;\n    display: flex;\n    align-self: stretch;\n    flex-direction: column;\n    align-items: start;\n  }\n`\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <SiteHeader position=\"static\" color=\"default\">\n        <Container style={{padding: 0}}>\n          <Toolbar>\n            <ToolbarButton component={Link} to=\"/\">\n              <Typography variant=\"h6\" color=\"inherit\">\n                European Cities SDG Index 2019\n              </Typography>\n              <Typography variant=\"body1\" style={{color: '#6c757d'}} gutterBottom>\n                Prototype Version\n              </Typography>\n            </ToolbarButton>\n            <ToolbarButton style={{flexGrow: 1}} disabled/>\n            <ToolbarButton component='a' href=\"http://unsdsn.org/\" target='_blank' rel='noopener noreferrer'>\n              <img src='/images/SDSN-logo.png' alt='SDSN logo' style={{maxHeight: 60}}/>\n            </ToolbarButton>\n            </Toolbar>\n          </Container>\n        </SiteHeader>\n\n        <Container>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/:country\" component={CountryPage} />\n        </Container>\n        <GlobalStyle />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}